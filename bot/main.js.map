{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/app.component.css","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/components/message-form/message-form.component.css","webpack:///./src/app/components/message-form/message-form.component.html","webpack:///./src/app/components/message-form/message-form.component.ts","webpack:///./src/app/components/message-list/message-list.component.css","webpack:///./src/app/components/message-list/message-list.component.html","webpack:///./src/app/components/message-list/message-list.component.ts","webpack:///./src/app/models/message.ts","webpack:///./src/app/services/dialogflow.service.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":";;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAE;AACF;AACA,4CAA4C,WAAW;AACvD;AACA;AACA,4E;;;;;;;;;;;ACZA,mB;;;;;;;;;;;ACAA,iJ;;;;;;;;;;;;;;;;;;;;;ACAwC;AAQxC;IALA;QAOE,aAAQ,GAAc,EAAE,CAAC;IAE3B,CAAC;IAJY,YAAY;QALxB,+DAAS,CAAC;YACT,QAAQ,EAAE,UAAU;;;SAGrB,CAAC;OACW,YAAY,CAIxB;IAAD,mBAAC;CAAA;AAJwB;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACR+B;AACjB;AAEM;AACyC;AACA;AAC3C;AACW;AACuB;AACiB;AAiB9F;IAAA;IACA,CAAC;IADY,SAAS;QAfrB,8DAAQ,CAAC;YACR,YAAY,EAAE;gBACZ,2DAAY;gBACZ,oGAAoB;gBACpB,oGAAoB;aACrB;YACD,OAAO,EAAE;gBACP,uEAAa,EAAE,0DAAW,EAAE,qEAAgB;gBAC5C,4FAAuB;gBAEvB,gEAAc,EAAE,+DAAa,EAAE,+DAAa,EAAE,+DAAa;aAC5D;YACD,SAAS,EAAE,EAAE;YACb,SAAS,EAAE,CAAC,2DAAY,CAAC;SAC1B,CAAC;OACW,SAAS,CACrB;IAAD,gBAAC;CAAA;AADqB;;;;;;;;;;;;AC1BtB,mB;;;;;;;;;;;ACAA,0R;;;;;;;;;;;;;;;;;;;;;;;;;;ACAuD;AACV;AACuB;AAOpE;IAOE,8BAAoB,iBAAoC;QAApC,sBAAiB,GAAjB,iBAAiB,CAAmB;QALxD,YAAO,GAAY,IAAI,uDAAO,CAAC,EAAE,EAAE,wBAAwB,CAAC,CAAC;IAO7D,CAAC;IAED,uCAAQ,GAAR;IACA,CAAC;IAEM,0CAAW,GAAlB;QAAA,iBAYC;QAXC,IAAI,CAAC,OAAO,CAAC,SAAS,GAAG,IAAI,IAAI,EAAE,CAAC;QACpC,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;QAEjC,IAAI,CAAC,iBAAiB,CAAC,WAAW,CAAC,IAAI,CAAC,OAAO,CAAC,OAAO,CAAC,CAAC,SAAS,CAAC,aAAG;YACpE,OAAO,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;YACjB,KAAI,CAAC,QAAQ,CAAC,IAAI,CAChB,IAAI,uDAAO,CAAC,GAAG,CAAC,QAAQ,CAAC,CAAC,aAAa,CAAC,CAAC,QAAQ,CAAC,EAAE,uBAAuB,EAAE,GAAG,CAAC,WAAW,CAAC,CAAC,CAC/F,CAAC;QACJ,CAAC,CAAC,CAAC;QAEH,IAAI,CAAC,OAAO,GAAG,IAAI,uDAAO,CAAC,EAAE,EAAE,wBAAwB,CAAC,CAAC;IAC3D,CAAC;IArBD;QADC,2DAAK,CAAC,UAAU,CAAC;;0DACU;IALjB,oBAAoB;QALhC,+DAAS,CAAC;YACT,QAAQ,EAAE,kBAAkB;;;SAG7B,CAAC;yCAQuC,8EAAiB;OAP7C,oBAAoB,CA4BhC;IAAD,2BAAC;CAAA;AA5BgC;;;;;;;;;;;;ACTjC,mB;;;;;;;;;;;ACAA,2JAA2J,0BAA0B,2CAA2C,8BAA8B,aAAa,0BAA0B,sCAAsC,yC;;;;;;;;;;;;;;;;;;;;;;;;ACApR;AAQvD;IAKE;IACA,CAAC;IAED,uCAAQ,GAAR;IACA,CAAC;IAND;QADC,2DAAK,EAAE;;0DACoB;IAHjB,oBAAoB;QALhC,+DAAS,CAAC;YACT,QAAQ,EAAE,kBAAkB;;;SAG7B,CAAC;;OACW,oBAAoB,CAWhC;IAAD,2BAAC;CAAA;AAXgC;;;;;;;;;;;;;;ACRjC;AAAA;IAME,iBAAY,OAAe,EAAE,MAAc,EAAE,SAAgB;QAC3D,IAAI,CAAC,OAAO,GAAG,OAAO,CAAC;QACvB,IAAI,CAAC,SAAS,GAAG,SAAS,CAAC;QAC3B,IAAI,CAAC,MAAM,GAAG,MAAM,CAAC;IACvB,CAAC;IAEH,cAAC;AAAD,CAAC;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACZwC;AACoB;AACF;AAK3D;IAKE,2BAAoB,IAAgB;QAAhB,SAAI,GAAJ,IAAI,CAAY;QAH5B,YAAO,GAAG,gDAAgD,CAAC;QAC3D,UAAK,GAAW,qEAAW,CAAC,KAAK,CAAC;IAG1C,CAAC;IAEM,uCAAW,GAAlB,UAAmB,KAAa;QAC9B,IAAM,IAAI,GAAG;YACX,KAAK,EAAE,KAAK;YACZ,IAAI,EAAE,IAAI;YACV,SAAS,EAAE,OAAO;SACnB,CAAC;QACF,IAAM,OAAO,GAAG,IAAI,gEAAW,CAAC;YAC9B,eAAe,EAAE,YAAU,IAAI,CAAC,KAAO;SACxC,CAAC,CAAC;QACH,MAAM,CAAC,IAAI,CAAC,IAAI;aACb,IAAI,CAAC,KAAG,IAAI,CAAC,OAAS,EAAE,IAAI,EAAE,EAAC,OAAO,WAAC,CAAC,CAAC;IAC9C,CAAC;IAnBU,iBAAiB;QAH7B,gEAAU,CAAC;YACV,UAAU,EAAE,MAAM;SACnB,CAAC;yCAM0B,+DAAU;OALzB,iBAAiB,CAoB7B;IAAD,wBAAC;CAAA;AApB6B;;;;;;;;;;;;;;ACP9B;AAAA,gFAAgF;AAChF,2EAA2E;AAC3E,gEAAgE;AAEzD,IAAM,WAAW,GAAG;IACzB,UAAU,EAAE,KAAK;IACjB,KAAK,EAAE,kCAAkC;CAC1C,CAAC;AAEF;;;;;GAKG;AACH,mEAAmE;;;;;;;;;;;;;;;;;;ACfpB;AAC4B;AAE9B;AACY;AAEzD,EAAE,CAAC,CAAC,qEAAW,CAAC,UAAU,CAAC,CAAC,CAAC;IAC3B,oEAAc,EAAE,CAAC;AACnB,CAAC;AAED,gGAAsB,EAAE,CAAC,eAAe,CAAC,yDAAS,CAAC;KAChD,KAAK,CAAC,aAAG,IAAI,cAAO,CAAC,GAAG,CAAC,GAAG,CAAC,EAAhB,CAAgB,CAAC,CAAC","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error('Cannot find module \"' + req + '\".');\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","module.exports = \"\"","module.exports = \"<app-message-list [messages]=\\\"messages\\\"></app-message-list>\\n<app-message-form [messages]=\\\"messages\\\"></app-message-form>\\n\"","import {Component} from '@angular/core';\nimport {Message} from './models/message';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n\n  messages: Message[] = [];\n\n}\n","import {BrowserModule} from '@angular/platform-browser';\nimport {NgModule} from '@angular/core';\n\nimport {AppComponent} from './app.component';\nimport {MessageListComponent} from './components/message-list/message-list.component';\nimport {MessageFormComponent} from './components/message-form/message-form.component';\nimport {FormsModule} from '@angular/forms';\nimport {HttpClientModule} from '@angular/common/http';\nimport {BrowserAnimationsModule} from '@angular/platform-browser/animations';\nimport {MatCardModule, MatIconModule, MatInputModule, MatListModule} from '@angular/material';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    MessageListComponent,\n    MessageFormComponent\n  ],\n  imports: [\n    BrowserModule, FormsModule, HttpClientModule,\n    BrowserAnimationsModule,\n\n    MatInputModule, MatListModule, MatIconModule, MatCardModule\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule {\n}\n","module.exports = \"\"","module.exports = \"<form action=\\\"\\\" #messageForm=\\\"ngForm\\\" (ngSubmit)=\\\"sendMessage()\\\">\\n  <mat-form-field>\\n    <input matInput name=\\\"content\\\"\\n           [(ngModel)]=\\\"message.content\\\"\\n           placeholder=\\\"Message\\\" autocomplete=\\\"off\\\">\\n  </mat-form-field>\\n</form>\\n\"","import {Component, Input, OnInit} from '@angular/core';\nimport {Message} from '../../models/message';\nimport {DialogflowService} from '../../services/dialogflow.service';\n\n@Component({\n  selector: 'app-message-form',\n  templateUrl: './message-form.component.html',\n  styleUrls: ['./message-form.component.css']\n})\nexport class MessageFormComponent implements OnInit {\n\n  message: Message = new Message('', 'assets/images/user.png');\n\n  @Input('messages')\n  private messages: Message[];\n\n  constructor(private dialogFlowService: DialogflowService) {\n\n  }\n\n  ngOnInit() {\n  }\n\n  public sendMessage(): void {\n    this.message.timestamp = new Date();\n    this.messages.push(this.message);\n\n    this.dialogFlowService.getResponse(this.message.content).subscribe(res => {\n      console.log(res);\n      this.messages.push(\n        new Message(res['result']['fulfillment']['speech'], 'assets/images/bot.png', res['timestamp'])\n      );\n    });\n\n    this.message = new Message('', 'assets/images/user.png');\n  }\n\n}\n","module.exports = \"\"","module.exports = \"<mat-list >\\n  <mat-list-item *ngFor=\\\"let msg of messages.slice(-6)\\\">\\n    <div mat-list-icon\\n         style=\\\"background-size: cover;\\\"\\n         [ngStyle]=\\\"{backgroundImage: 'url(' + msg.avatar + ')'}\\\"></div>\\n    <h4 mat-line>{{msg.content}}</h4>\\n    <p mat-line> {{msg.timestamp | date : 'dd/MM/yyyy' }} </p>\\n  </mat-list-item>\\n</mat-list>\\n\"","import {Component, Input, OnInit} from '@angular/core';\nimport {Message} from '../../models/message';\n\n@Component({\n  selector: 'app-message-list',\n  templateUrl: './message-list.component.html',\n  styleUrls: ['./message-list.component.css']\n})\nexport class MessageListComponent implements OnInit {\n\n  @Input()\n  private messages: Message[];\n\n  constructor() {\n  }\n\n  ngOnInit() {\n  }\n\n}\n","export class Message {\n\n  content: string;\n  timestamp: Date;\n  avatar: string;\n\n  constructor(content: string, avatar: string, timestamp?: Date) {\n    this.content = content;\n    this.timestamp = timestamp;\n    this.avatar = avatar;\n  }\n\n}\n","import {Injectable} from '@angular/core';\nimport {HttpClient, HttpHeaders} from '@angular/common/http';\nimport {environment} from '../../environments/environment';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class DialogflowService {\n\n  private baseURL = 'https://api.dialogflow.com/v1/query?v=20150910';\n  private token: string = environment.token;\n\n  constructor(private http: HttpClient) {\n  }\n\n  public getResponse(query: string) {\n    const data = {\n      query: query,\n      lang: 'en',\n      sessionId: '12345'\n    };\n    const headers = new HttpHeaders({\n      'Authorization': `Bearer ${this.token}`\n    });\n    return this.http\n      .post(`${this.baseURL}`, data, {headers});\n  }\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build ---prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false,\n  token: 'c16a8447b5f24e29b0c2c9a35b1d01e5'\n};\n\n/*\n * In development mode, to ignore zone related error stack frames such as\n * `zone.run`, `zoneDelegate.invokeTask` for easier debugging, you can\n * import the following file, but please comment it out in production mode\n * because it will have performance impact when throw error\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.log(err));\n"],"sourceRoot":""}